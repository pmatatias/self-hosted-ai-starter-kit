version: '3.8'  # Adding version explicitly

volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:

networks:
  demo:
    name: demo
    driver: bridge

x-n8n: &service-n8n
  build: 
    context: .
    dockerfile: Dockerfile
  networks:
    - demo
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    - N8N_ENCRYPTION_KEY
    - N8N_BLOCK_EXECUTABLES=false
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - WEBHOOK_URL=${WEBHOOK_URL}
    - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks:
      - demo
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama:
    profiles: ["cpu"]
    image: ollama/ollama:latest
    container_name: ollama
    networks:
      - demo
    restart: unless-stopped
    ports:
      - 11434:11434
    volumes:
      - ollama_storage:/root/.ollama

  ollama-pull-llama:
    profiles: ["cpu"]
    image: ollama/ollama:latest
    container_name: ollama-pull-llama
    networks:
      - demo
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    command:
      - "-c"
      - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama2"
    depends_on:
      - ollama